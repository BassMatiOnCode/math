<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="template-info" file-name="empty.htm" version="2025-03-14" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2025-03-27" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2025-03-27" />
<meta name="version" content="1" />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="all" />
 
<meta name="tags" content="knowledge, math, geometry" />
<meta name="description" content="" />

<title></title>

</head><body>

<svg id="svgRoot" xmlns="http://www.w3.org/2000/svg" 
	viewBox="-150 -140 300 280" width="300" height="280" 
	stroke="black" stroke-width="1" stroke-linecap="round" stroke-linejoin="round" fill="none" text-anchor="middle" dominant-baseline="central" font-size="14"
	style="border:1px none silver">

<style type="text/css">
	tspan.sub { baseline-shift: sub ; font-size : 80% }
	tspan.sup { baseline-shift: super ; font-size : 80% }
	</style>

<defs>
	<circle id="hollowPoint" r="3" />
	</defs>

<g id="construction" stroke="darkgrey"></g>
<g id="main"></g>
<g id="points" fill="white"></g>
<g id="annotations" stroke-width="4" stroke="white" fill="black" paint-order="stroke fill"></g>

</svg><script type="module">
import { setDefaultInjectionTarget, setHrefTargetMap, setTagnameTargetMap } from "/inc/svg-toolbox/core/core.js" ;
import { Circle } from "/inc/svg-toolbox/circle/circle.js" ;
import { Ellipse } from "/inc/svg-toolbox/ellipse/ellipse.js" ;
import { Line } from "/inc/svg-toolbox/line/line.js" ;
import { Path } from "/inc/svg-toolbox/path/path.js" ;
import { Text } from "/inc/svg-toolbox/text/text.js" ;
import { namedPoint } from "/inc/svg-toolbox/named-point/named-point.js" ;
import { Use } from "/inc/svg-toolbox/use/use.js" ;

	// Infrastructure
setHrefTargetMap( { "#hollowPoint" : "points" } );
setTagnameTargetMap( { text : "annotations" } );
setDefaultInjectionTarget( "main" );

	// The ellipse
const ellipse = new Ellipse( { rx: 120, ry: 60 } );
const center = namedPoint( "C" );
	// Construction lines
setDefaultInjectionTarget( "construction" );
new Line( { x1: - ellipse.rx - 10, x2 : ellipse.rx + 10 }, { "stroke-dasharray" : "1 3 6 3" } );
const circleA = new Circle( { r: ellipse.rx } );
const circleB = new Circle( { r: ellipse.ry } );

	// Points
const { point: pointQ } = namedPoint( "Q", { x: circleA.r * Math.cos( Math.PI / 4 ), y: -circleA.r * Math.sin( Math.PI / 4 ) }, { dx: 5 } ) ;
const { point : pointR } = namedPoint( "R", { x: circleB.r * Math.cos( Math.PI / 4 ), y: -circleB.r * Math.sin( Math.PI / 4 ) }, { dx: -10, dy: 0 } );
const { point : pointP } = namedPoint( "P", { x: pointQ.x, y: pointR.y }, { dx: 5 } );
const { point : pointS } = namedPoint( "", { x: pointQ.x }, { dx: 5 } ) ;

	// Lines
new Line( { p2: pointQ.p } );
new Line( { p1: pointR.p, p2: pointP.p } );
new Line( { p1: pointQ.p, p2: pointS.p } );
new Line( { p2: pointS } );
new Line( { p2: pointP } );

	// Annotations
const tau = Math.atan( pointQ.y / pointS.x );
new Text( "τ" , { x: 20 * Math.cos( tau/2 ), y: 20 * Math.sin( tau/2 ) }, { "dominant-baseline" : "middle" } );
new Path( `M 0 0 L 30 0 A 30 30 0 0 0 ${ 30 * Math.cos( tau ) } ${ 30 * Math.sin( tau ) } z`, { attributes: { fill: "white" } } );
const phi = Math.atan( pointP.y / pointP.x );
new Text( "φ" , { x: 40 * Math.cos( phi / 2 ), y: 40 * Math.sin( phi / 2 ) }, { "dominant-baseline" : "middle" } );
new Path( `M 0 0 L 50 0 A 30 30 0 0 0 ${ 50 * Math.cos( phi ) } ${ 50 * Math.sin( phi ) }` );

</script></body></html>